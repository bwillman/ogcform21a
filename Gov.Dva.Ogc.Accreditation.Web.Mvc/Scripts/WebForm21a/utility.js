


var addChildEntity = function (event) {
    //To add the HTML for a new row of military history, I'm taking the route of grabbing 
    //the autogenerated HTML from the .NET HtmlHelper for a row, 
    //incrementing the number by regex replacement, and appending it to the container div
    console.log("event.target=" + event.target);
    var entityName = event.data[0].toString();
    currCount = $("." + entityName + "Row").length; console.log('add' + entityName + '.currCount=' + currCount);//count current # of child entity
    var lastRowText = $("." + entityName + "Row").last().html();//get the HTML text of the last row of military service
    //get the next row number
    r0 = /_\d+_/; //create regular expression 
    lastRowString = lastRowText.match(r0);
    lastRowNumber = lastRowString[0].replace("_", "", "g");
    nextRowNumber = parseInt(lastRowNumber) + 1;
    console.log("match is:" + lastRowString + ", lastRowNumber:" + lastRowNumber);

    //increment collection number in HTML attributes
    r = "_" + lastRowNumber.toString() + "_"; //create regular expression text dynamically
    reg = new RegExp(r, "g");
    var nextRow = lastRowText.replace(reg, "_" + nextRowNumber.toString() + "_");

    r2 = "\\[" + lastRowNumber.toString() + "\\]"; //create regular expression text dynamically
    reg2 = new RegExp(r2, "g");
    nextRow = nextRow.replace(reg2, "[" + nextRowNumber.toString() + "]");

    if (currCount == 1) {
        $("#" + entityName + "Div").append("<div class=\"row " + entityName + "Row\">" + nextRow + "<div class=\"col-md-2 form-group\"><a href=\"#\" class=\"remove" + entityName.charAt(0).toUpperCase() + entityName.slice(1) + "\">Remove</a></div></div>");
    }
    else {//assume > 1
        $("#" + entityName + "Div").append("<div class=\"row " + entityName + "Row\">" + nextRow + "</div>");

    }

    $(".remove" + entityName.charAt(0).toUpperCase() + entityName.slice(1)).off("click");//remove click from all "remove" links to avoid doubling up on events
    $(".remove" + entityName.charAt(0).toUpperCase() + entityName.slice(1)).on("click", removeChildEntity);

    return false;

}

var removeChildEntity = function (e) {
    $(e.target).parent().parent().remove();

    return false;
}